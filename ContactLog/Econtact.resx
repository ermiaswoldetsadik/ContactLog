<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAA6NJREFUeF7t
        nL2vDkEUh18NkSg1vlXUJOLrb9BR6uhFT+czERoJHaGhUVIThVYkcokO/wEFEn7nvfklY8ye3fXOmZ3Z
        e57kSe7cnb3n7Ln7zs7s5N6F4ziO4ziO4zj2bIY34Ff4u3G/wGtQrqkY12EqmZa9CoshvzUJenzZ+hsm
        1AonoOQr11QMrUitFVAonrMWkMdeLVvrvIY1t7XrMUELyGMvl611JNma28xZLPJQYbAU2rFaYc6hpg8V
        BkmhHauVMOciDxWtSNqxWugbA82vQQtgHjwDXWMgMb8GLYB5cAPinM2vQQtgHtyAOGfza9ACmAfPgI+B
        K+JjYGbCnE9C+VreNJmhFUk7VivMOdQn0gpdY2BoEwU8D2/DnctWObQxkCuR6j/CNyH7foJ74VTEOcft
        7GgBhgQ/C9mPTllE5kDidna0AH3BN8E1yH6hpYrY9DzwKGSflCWK2PQ8UB4a7NOlFHEXLAXjkridHS1A
        X/D3kH0078JSMCaJ29nRAmjH9kEe7/MCtEIbA6teieyGPyH7dHkfysPGiq4xMLTaifRjyD4prYuXIpVH
        tQU8CH9B9gu9B0sXT2B8oYmVyEPIfvQDLFW85t8H7offIftSmSOWoOl5ILkM2Zc+h1PA+CRuZ0cLMDT4
        FvgWsj89DUvD2CRuZ0cLMCb4YfgD8hxRBu8d0JJZ7YlchDyHvoFboRWzGAOJPHmfQp5Hn8G+Isq58guQ
        6c8qa2fGFJrcE9kG5a7juVS+1/VxluLJpJt9V3mLE8akze2JbIepFw1yJ5yBIXHx6NAizmZPJGYP7Hpb
        8wIeg1I8+cim+ohDiqiNgc3siXQhd2Lq40w/Jr4XO/bjzPNI3M6OFiBHcBkTn0D+rP9Rijh0t4/nkLid
        HS1AzuDyhI3niWO8A1PMah7YxyGYWrEM8RxMMat54BBk2XcJfoP8+X3KvvNQeA6J29nRAlgGly2BB7Dr
        faL4Dp6CY+C5JG5nRwtgHhwcgI8gtwdk6nMLHoFDaHZPJDeyfJO7cixdY2BokxPpqWDOoV7AEYQ5N78S
        KcGGmgdasOHmgdbEOZtfgxbAPLgBcc7m16AFMA+eAR8DV8THwMyEOXMl8nnZMkIrknasVphz6BVoBoOk
        4LFwjInHnNrazFmUO0+KN/mf/IdjjCRbc1u7HhO0gMWTyUDxnPmPd2TdGNNaAYs8NGLk34KwUHPR9KER
        IwOsFJF3YssWeWg4juM4juM4jvMPi8Uf+tr6SIkDGjIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAiqSURBVHhe7Vpdb1zVFZ0nnvoDigJ5Kj8B/kPbdyRUCSoxMwiVRilC1PZELlRAnAJJCa6dxBCS
        9q2EPCBEBPQHAM+NwUmIQ2bGEMeO7Uwyn3fu7t5n9h7vOd73zrm2o84gtrSU2PfsdfZa5+ve65v7OXYR
        5TocKLfgk0ob6tU2AGEF8UMH4EfGLYb8TKDrIdA5Pg9dp76kX6yhhfh8pQEHubwHH9RhmnBdrBQskLwk
        6LaSn8St+agmLu/BB3Z4VwqUwqQ4KVpEqAIzQfKER3it/rifLS7vwQd2+IUuRhfCxQyIKXu4SWh58NoQ
        NIdvxo6+W3CJy3vwsQJwEDv/DDtvJgkXEVrk94HQOb4ZhhH11Q58fBvgYS7v/xeVOjyCm+OnMsJa1I2M
        0LnODOSsdGDyMsBD3N1oRrUOj/qilwXNHq4nQK5Le9+MVYBfcDejG2RAXzQL0iK/GwLdVhtCnDgTpkZ6
        BlxD8VjsJS1ai7um0fCgrumcATPYCJkRskfovUFvkLI/8d40/H7hBm4kSLiACctCZhw3/U1O1rlMVV+4
        FntV4UoCdBttim+E9JfVBFdz0v2Cu7vrQJWINIkWL8J98TQylnBL8NIQ6LZ9M5hvwAjuW5sgRgyp375f
        QPEXxUVJ9h2srtagNvc5tA6dhXbx9EiBaqrNfgYrlY2BmaBnsNOQdL9AzkiiiKd/RfwKim/+6ZzZ+Sih
        eficq9XQUkcTPqZlzpIHgwxIco1mRm3uC+zgzFigNv+f/p6AGj5ZAzjAMpOjikuABJNwEU+G8LrBKfaB
        2dkoonnoXH8/oJszlpge5SY8hqLX/alPRLTJWNNtlNE/HUINoFjtmXAB4fYDGf2xNgBvzTOZ4AfdeeHZ
        +Xi7eAqJxwf+PUJ/Q4xg+ccIzuBt9S9ZYli0i/NIPD6QewQxgDfE/h6Hj88rmWaG1ckow79JIgP0seg2
        +Q58yPKGR7s4h8TjA/UANbAMSLja6DdZ3vBoF/+BxMPRmfwnxN+UAZptiBfL0Jn6l9kuBJRLHH0u5Lba
        WZBnBpkF5jJowwbLGx7t4iwSD4cTryLeuAedI2SC3T4JlEO5OuLFm2ZbC/K8kLgZItCMCywvOegUuN6G
        J9rFd5F4OGi0/OiZQKNn5/igtr54F42W2d6CM0DNAmMZrOOx/yuWmcvROzWcIgvYaJleP1ESJRMJPYW1
        iyeDQKNkRbxRQ2HnzRwNakNtrejNADvPB9U8sAy2Ddikkd8hHn9ZpjVCTtGUEQPkEbdd/HsQOlNnkwU4
        E+iBKiEXr6XmIreVZ4GlhQWuiYs0NXwD5DmfDOgUT4Rj8n2I17a4dC+27kH0l/M7cqIjHwAkiIc7NXfd
        z0kDSwsLNMA9CWoD3PQfMODtbJhcGGICCeq1jY6cTRF/F6+/P8gdAJYWFmIArZEBA1A4GUBvYzrFt7Jj
        8swQE846ceni37O5h4ClhYUsgVQDCn/bHSZOowmbrMiLWh3g7n3+wQsSX1qwOQPA0sKCngLRgPV0A2Z2
        j4n5ZBOscOJP21yBYGnhQe8DKng8oAFbtgFH94aJuTATnPhTNkcGUM1UuxyFqKlabsHMrv+uEBVehz1j
        YtYJTAzaF0pzdm5GGAa42V1twVGWlC2iwmtIvEegOBKZGLX7EE2fsnMzgk4uZwDPZjGAHoNZUraICn9F
        4j2ghKO/kTL6Elt45k/TLDA4MkAb4O4E2YBqByosKVtEhVeQeJconQwTL+FMmLW5AiEG0OhrAyoteIMl
        ZYuoMI3Eu0DpHRSfcC+wief/naT7BDLhXZszAGSArH9nAI48id/DJngEiTOidCJZPAqPSsdxY3wLYG2D
        f+mFM+Edm3sIuOz9i6gwhcQZUHo7Rfymu95vO/EmmnCHL3qxhcfiND4raO4AcNn7F93CBASjhKOaIr5b
        enNnzsSxVBO608d35qSAy96/6BZeRuIATM2g+IQbHvx9t3TMziPgtdTcyRk7zwCXvX/RLbyExMMRL17h
        ir1w4kmAndcHtkkyIb68ZOcY4LL3L7r5FyEE0MSt1w8SP/WG2d4EtjVNaDTt9gZk93dHH53/CH4h2kJ8
        /UMEv2Vp20FHxK0OHHN/NMAESqbzk4i6+cNBiBeXuFoOJ/41s20qMMc3Ib78rd3WwMDZj6CnXRS+/TcB
        0hfBb1h6L/DiDDWiBuSYNqGbPxSGP7/iCqWZEP/3G9zcXrXbhQBziaPPhdxmOwNavBp9B6XvK5beC7xQ
        JYeoETmk3xB1838YK4gBpMEafR7cuyy9F2SAdkk1hDj//FhBRp80kBatS2b3TX8G4No/Sg1kFujGcf65
        sQLVTLWLeGP043ITfs3Se0GbIJmACTuWQpwvjBX8qa+0tFD8lzvE+1EBeAQTPxXX4vyzYwWqmUc/7Bsh
        K6oAj5JzRBTnfz9WkKlPA8lysgcZINOn+0IRiZ8eC3T/+Fx/6u/aAProGfeDS+QkETVmjyP578YC9fmT
        25teyDdCN+7DwzeasIB3T8v+DYSspbXKCkSH8tjBUyON6HABbq+u98SzBt716W33R/T2m2X3YqkOB643
        oTrw9iTBhNu31qAxhzPhhWcAnn1ypEA1NeZPoPg1S7zTRNpQ453vtAnXmnCx/wIxwARZW7I5+h25zgjM
        IyDeLNC5xEWcwp+1JiXeaUR8xPJzuasN2KJ36PotqhSQxQTd6YAZzCNFhEDnCI/wSh1ptSSKR5BG1Lr9
        acwVNEA+SR9mgi4g1AgpRENmyAC8NgTNkUW49Em8hnjSuv1x1BIuAfk2P80EKVAXowvRxfhm+IaEQPKE
        R3it/qQfynPCCVy7IR6uNuHfLD+XW8QNAQ1YN01AiAn+bNAFSmFSnPxfihYRUmgadFvJT+LWfH3xql4n
        nrX0xTegsoinHsvvhTOhCRfM5YAgIj0bqKMQI3TBUnQIdI7PQ9ct4Vq81KvFI65fa8Cp5XsZP5H9OX7S
        kcv9DytHVwuL/YHKAAAAAElFTkSuQmCC
</value>
  </data>
</root>